# Bake Begins!
### (1 of 6) Copy sources
$ cp -a /home/travis/build/fontdirectory/sarabun/METADATA.json /home/travis/build/fontdirectory/sarabun/builds/build
$ cp -a /home/travis/build/fontdirectory/sarabun/DESCRIPTION.en_us.html /home/travis/build/fontdirectory/sarabun/builds/build
$ cp -a Sarabun-Italic.ttf.ttx Sarabun-BoldItalic.ttf.ttx Sarabun-Regular.ttf.ttx Sarabun-Bold.ttf.ttx Sarabun-Italic.ttf._m_a_x_p.ttx Sarabun-Italic.ttf._g_a_s_p.ttx Sarabun-Italic.ttf.P_C_L_T_.ttx Sarabun-Italic.ttf._m_o_r_x.ttx Sarabun-Italic.ttf.G_D_E_F_.ttx Sarabun-Italic.ttf.G_S_U_B_.ttx Sarabun-Italic.ttf.G_P_O_S_.ttx Sarabun-Italic.ttf._f_e_a_t.ttx Sarabun-Italic.ttf._g_l_y_f.ttx Sarabun-Italic.ttf.L_T_S_H_.ttx Sarabun-Italic.ttf._n_a_m_e.ttx Sarabun-Italic.ttf.GlyphOrder.ttx Sarabun-Italic.ttf._h_m_t_x.ttx Sarabun-Italic.ttf._c_v_t.ttx Sarabun-Italic.ttf.D_S_I_G_.ttx Sarabun-Italic.ttf.O_S_2f_2.ttx Sarabun-Italic.ttf._h_h_e_a.ttx Sarabun-Italic.ttf._f_p_g_m.ttx Sarabun-Italic.ttf._k_e_r_n.ttx Sarabun-Italic.ttf._p_o_s_t.ttx Sarabun-Italic.ttf._h_e_a_d.ttx Sarabun-Italic.ttf._c_m_a_p.ttx Sarabun-Italic.ttf._l_o_c_a.ttx Sarabun-Italic.ttf._h_d_m_x.ttx Sarabun-Italic.ttf.V_D_M_X_.ttx Sarabun-Italic.ttf._p_r_e_p.ttx Sarabun-BoldItalic.ttf._l_o_c_a.ttx Sarabun-BoldItalic.ttf.L_T_S_H_.ttx Sarabun-BoldItalic.ttf.O_S_2f_2.ttx Sarabun-BoldItalic.ttf._m_a_x_p.ttx Sarabun-BoldItalic.ttf._m_o_r_x.ttx Sarabun-BoldItalic.ttf.V_D_M_X_.ttx Sarabun-BoldItalic.ttf._g_a_s_p.ttx Sarabun-BoldItalic.ttf._f_e_a_t.ttx Sarabun-BoldItalic.ttf._h_e_a_d.ttx Sarabun-BoldItalic.ttf._h_d_m_x.ttx Sarabun-BoldItalic.ttf.G_S_U_B_.ttx Sarabun-BoldItalic.ttf._h_h_e_a.ttx Sarabun-BoldItalic.ttf.GlyphOrder.ttx Sarabun-BoldItalic.ttf._g_l_y_f.ttx Sarabun-BoldItalic.ttf._f_p_g_m.ttx Sarabun-BoldItalic.ttf.G_D_E_F_.ttx Sarabun-BoldItalic.ttf._c_m_a_p.ttx Sarabun-BoldItalic.ttf._c_v_t.ttx Sarabun-BoldItalic.ttf.D_S_I_G_.ttx Sarabun-BoldItalic.ttf.G_P_O_S_.ttx Sarabun-BoldItalic.ttf._p_r_e_p.ttx Sarabun-BoldItalic.ttf.P_C_L_T_.ttx Sarabun-BoldItalic.ttf._k_e_r_n.ttx Sarabun-BoldItalic.ttf._n_a_m_e.ttx Sarabun-BoldItalic.ttf._h_m_t_x.ttx Sarabun-BoldItalic.ttf._p_o_s_t.ttx Sarabun-Regular.ttf.O_S_2f_2.ttx Sarabun-Regular.ttf._f_e_a_t.ttx Sarabun-Regular.ttf.G_D_E_F_.ttx Sarabun-Regular.ttf._k_e_r_n.ttx Sarabun-Regular.ttf._g_l_y_f.ttx Sarabun-Regular.ttf._g_a_s_p.ttx Sarabun-Regular.ttf._h_e_a_d.ttx Sarabun-Regular.ttf._p_o_s_t.ttx Sarabun-Regular.ttf.G_S_U_B_.ttx Sarabun-Regular.ttf._m_a_x_p.ttx Sarabun-Regular.ttf._h_m_t_x.ttx Sarabun-Regular.ttf._c_m_a_p.ttx Sarabun-Regular.ttf.G_P_O_S_.ttx Sarabun-Regular.ttf._m_o_r_x.ttx Sarabun-Regular.ttf._n_a_m_e.ttx Sarabun-Regular.ttf.V_D_M_X_.ttx Sarabun-Regular.ttf.L_T_S_H_.ttx Sarabun-Regular.ttf.D_S_I_G_.ttx Sarabun-Regular.ttf._c_v_t.ttx Sarabun-Regular.ttf.GlyphOrder.ttx Sarabun-Regular.ttf._f_p_g_m.ttx Sarabun-Regular.ttf._p_r_e_p.ttx Sarabun-Regular.ttf._h_h_e_a.ttx Sarabun-Regular.ttf._l_o_c_a.ttx Sarabun-Regular.ttf._h_d_m_x.ttx Sarabun-Bold.ttf._m_a_x_p.ttx Sarabun-Bold.ttf._p_o_s_t.ttx Sarabun-Bold.ttf._m_o_r_x.ttx Sarabun-Bold.ttf._c_m_a_p.ttx Sarabun-Bold.ttf._c_v_t.ttx Sarabun-Bold.ttf._g_a_s_p.ttx Sarabun-Bold.ttf._h_m_t_x.ttx Sarabun-Bold.ttf.GlyphOrder.ttx Sarabun-Bold.ttf.O_S_2f_2.ttx Sarabun-Bold.ttf._h_h_e_a.ttx Sarabun-Bold.ttf._h_d_m_x.ttx Sarabun-Bold.ttf._h_e_a_d.ttx Sarabun-Bold.ttf.L_T_S_H_.ttx Sarabun-Bold.ttf._g_l_y_f.ttx Sarabun-Bold.ttf._l_o_c_a.ttx Sarabun-Bold.ttf.G_S_U_B_.ttx Sarabun-Bold.ttf.G_P_O_S_.ttx Sarabun-Bold.ttf.D_S_I_G_.ttx Sarabun-Bold.ttf._n_a_m_e.ttx Sarabun-Bold.ttf._p_r_e_p.ttx Sarabun-Bold.ttf.V_D_M_X_.ttx Sarabun-Bold.ttf._k_e_r_n.ttx Sarabun-Bold.ttf.G_D_E_F_.ttx Sarabun-Bold.ttf._f_e_a_t.ttx Sarabun-Bold.ttf._f_p_g_m.ttx /home/travis/build/fontdirectory/sarabun/builds/build/sources
### (2 of 6) pyfontaine
### (3 of 6) Run upstream tests
$ fontbakery-check.py upstream-repo sources
$ fontaine --collections subsets --text /home/travis/build/fontdirectory/sarabun/builds/build/sources/Sarabun-Italic.ttf.ttx /home/travis/build/fontdirectory/sarabun/builds/build/sources/Sarabun-BoldItalic.ttf.ttx /home/travis/build/fontdirectory/sarabun/builds/build/sources/Sarabun-Regular.ttf.ttx /home/travis/build/fontdirectory/sarabun/builds/build/sources/Sarabun-Bold.ttf.ttx > fontaine.txt
WARNING: Please install [PyICU](https://pypi.python.org/pypi/PyICU) toenable [feature], perhaps with: pip install pyicu
bakery_lint.tests.upstream.test_prepolation.FontTestPrepolation.test_font_prepolation_glyph_contours(): OK
end of pyfontaine process
bakery_lint.tests.upstream.test_prepolation.FontTestPrepolation.test_font_prepolation_glyph_points(): OK
bakery_lint.tests.upstream.test_prepolation.FontTestPrepolation.test_font_test_prepolation_glyph_names(): OK
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_bakery_yaml_exists(): OK
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_copyright_notices_same_across_family(): OK
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_description_html_exists(): OK
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_fontlog_txt_exists(): FAIL
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_metadata_json_exists(): OK
bakery_lint.tests.upstream.test_diacritic.TestDiacritic.test_diacritic_made_as_component(): OK
bakery_lint.tests.upstream.test_diacritic.TestDiacritic.test_diacritic_made_as_mark_to_mark(): OK
bakery_lint.tests.upstream.test_diacritic.TestDiacritic.test_diacritic_made_as_own_glyphs(): OK
$ fontbakery-check.py upstream-ttx Sarabun-Italic.ttf.ttx
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): OK
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): FAIL
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/sarabun/builds/build/sources/Sarabun-Italic.ttf.ttx /home/travis/build/fontdirectory/sarabun/builds/build/sources/Sarabun-Italic.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
$ fontbakery-check.py upstream-ttx Sarabun-BoldItalic.ttf.ttx
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): OK
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): FAIL
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/sarabun/builds/build/sources/Sarabun-BoldItalic.ttf.ttx /home/travis/build/fontdirectory/sarabun/builds/build/sources/Sarabun-BoldItalic.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
$ fontbakery-check.py upstream-ttx Sarabun-Regular.ttf.ttx
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): OK
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): FAIL
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/sarabun/builds/build/sources/Sarabun-Regular.ttf.ttx /home/travis/build/fontdirectory/sarabun/builds/build/sources/Sarabun-Regular.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
$ fontbakery-check.py upstream-ttx Sarabun-Bold.ttf.ttx
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): OK
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): FAIL
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/sarabun/builds/build/sources/Sarabun-Bold.ttf.ttx /home/travis/build/fontdirectory/sarabun/builds/build/sources/Sarabun-Bold.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
### (4 of 6) Convert sources to TTF
$ ttx -d /home/travis/build/fontdirectory/sarabun/builds/build /home/travis/build/fontdirectory/sarabun/builds/build/sources/Sarabun-Italic.ttx /home/travis/build/fontdirectory/sarabun/builds/build/sources/Sarabun-Bold.ttx /home/travis/build/fontdirectory/sarabun/builds/build/sources/Sarabun-BoldItalic.ttx /home/travis/build/fontdirectory/sarabun/builds/build/sources/Sarabun-Regular.ttx
Compiling "/home/travis/build/fontdirectory/sarabun/builds/build/sources/Sarabun-Italic.ttx" to "/home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Italic.ttf"...
Parsing 'GlyphOrder' table...
Parsing 'head' table...
Parsing 'hhea' table...
Parsing 'maxp' table...
Parsing 'OS/2' table...
Parsing 'hmtx' table...
Parsing 'LTSH' table...
Parsing 'VDMX' table...
Parsing 'hdmx' table...
Parsing 'cmap' table...
Parsing 'fpgm' table...
Parsing 'prep' table...
Parsing 'cvt ' table...
Parsing 'loca' table...
Parsing 'glyf' table...
Parsing 'kern' table...
Parsing 'name' table...
Parsing 'post' table...
Parsing 'gasp' table...
Parsing 'PCLT' table...
Parsing 'GDEF' table...
Parsing 'GPOS' table...
Parsing 'GSUB' table...
Parsing 'feat' table...
Parsing 'morx' table...
Parsing 'DSIG' table...
Compiling "/home/travis/build/fontdirectory/sarabun/builds/build/sources/Sarabun-Bold.ttx" to "/home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Bold.ttf"...
Parsing 'GlyphOrder' table...
Parsing 'head' table...
Parsing 'hhea' table...
Parsing 'maxp' table...
Parsing 'OS/2' table...
Parsing 'hmtx' table...
Parsing 'LTSH' table...
Parsing 'VDMX' table...
Parsing 'hdmx' table...
Parsing 'cmap' table...
Parsing 'fpgm' table...
Parsing 'prep' table...
Parsing 'cvt ' table...
Parsing 'loca' table...
Parsing 'glyf' table...
Parsing 'kern' table...
Parsing 'name' table...
Parsing 'post' table...
Parsing 'gasp' table...
Parsing 'GDEF' table...
Parsing 'GPOS' table...
Parsing 'GSUB' table...
Parsing 'feat' table...
Parsing 'morx' table...
Parsing 'DSIG' table...
Compiling "/home/travis/build/fontdirectory/sarabun/builds/build/sources/Sarabun-BoldItalic.ttx" to "/home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-BoldItalic.ttf"...
Parsing 'GlyphOrder' table...
Parsing 'head' table...
Parsing 'hhea' table...
Parsing 'maxp' table...
Parsing 'OS/2' table...
Parsing 'hmtx' table...
Parsing 'LTSH' table...
Parsing 'VDMX' table...
Parsing 'hdmx' table...
Parsing 'cmap' table...
Parsing 'fpgm' table...
Parsing 'prep' table...
Parsing 'cvt ' table...
Parsing 'loca' table...
Parsing 'glyf' table...
Parsing 'kern' table...
Parsing 'name' table...
Parsing 'post' table...
Parsing 'gasp' table...
Parsing 'PCLT' table...
Parsing 'GDEF' table...
Parsing 'GPOS' table...
Parsing 'GSUB' table...
Parsing 'feat' table...
Parsing 'morx' table...
Parsing 'DSIG' table...
Compiling "/home/travis/build/fontdirectory/sarabun/builds/build/sources/Sarabun-Regular.ttx" to "/home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Regular.ttf"...
Parsing 'GlyphOrder' table...
Parsing 'head' table...
Parsing 'hhea' table...
Parsing 'maxp' table...
Parsing 'OS/2' table...
Parsing 'hmtx' table...
Parsing 'LTSH' table...
Parsing 'VDMX' table...
Parsing 'hdmx' table...
Parsing 'cmap' table...
Parsing 'fpgm' table...
Parsing 'prep' table...
Parsing 'cvt ' table...
Parsing 'loca' table...
Parsing 'glyf' table...
Parsing 'kern' table...
Parsing 'name' table...
Parsing 'post' table...
Parsing 'gasp' table...
Parsing 'GDEF' table...
Parsing 'GPOS' table...
Parsing 'GSUB' table...
Parsing 'feat' table...
Parsing 'morx' table...
Parsing 'DSIG' table...
### Test Sarabun-Italic.ttf
$ fontbakery-check.py result Sarabun-Italic.ttf
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): OK
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
The following table(s) in the font have been ignored by FontForge
  Ignoring 'DSIG' digital signature table
  Ignoring 'LTSH' linear threshold table
  Ignoring 'PCLT' PCL 5 data table
  Ignoring 'VDMX' vertical device metrics table
  Ignoring 'hdmx' horizontal device metrics table
This font contains both a 'kern' table and a 'GPOS' table.
  The 'kern' table will only be read if there is no 'kern' feature in 'GPOS'.
This font contains both a 'mor[tx]' table and a 'GSUB' table.
  FF will only read feature/settings in 'morx' which do not match features
  found in 'GSUB'.
The glyph named zerowidthjoiner is mapped to U+200D.
But its name indicates it should be mapped to U+FEFF.
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): OK
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Italic.ttf
$ mv /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Italic.ttf.fix /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Italic.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Italic.ttf
$ mv /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Italic.ttf.fix /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Italic.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): FAIL
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Italic.ttf
$ mv /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Italic.ttf.fix /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Italic.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_menu_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): FAIL
$ fontbakery-fix-nbsp.py /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Italic.ttf
$ mv /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Italic.ttf.fix /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Italic.ttf
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): FAIL
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): FAIL
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Italic.ttf
$ mv /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Italic.ttf.fix /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Italic.ttf
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Italic.ttf
$ mv /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Italic.ttf.fix /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Italic.ttf
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): FAIL
$ fontbakery-fix-vertical-metrics.py --autofix /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Italic.ttf /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-BoldItalic.ttf /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Regular.ttf /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Bold.ttf
$ mv /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Italic.ttf.fix /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Italic.ttf
$ mv /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-BoldItalic.ttf.fix /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-BoldItalic.ttf
$ mv /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Regular.ttf.fix /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Regular.ttf
$ mv /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Bold.ttf.fix /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Bold.ttf
$ fontbakery-fix-vertical-metrics.py /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Italic.ttf /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-BoldItalic.ttf /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Regular.ttf /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Bold.ttf
Parameter              Sarabun-Italic.ttf    Sarabun-BoldItalic.ttf    Sarabun-Regular.ttf    Sarabun-Bold.ttf    
ymax                   3287                  3704                      3263                   3704                
hhea.ascent            3704                  3704                      3704                   3704                
OS/2.sTypoAscender     3704                  3704                      3704                   3704                
OS/2.usWinAscent       3704                  3704                      3704                   3704                
ymin                   -435                  -481                      -421                   -457                
hhea.descent           -481                  -481                      -481                   -481                
OS/2.sTypoDescender    -481                  -481                      -481                   -481                
OS/2.usWinDescent      481                   481                       481                    481                 
hhea.lineGap           0                     0                         0                      0                   
OS/2.sTypoLineGap      0                     0                         0                      0                   
hhea total             4185                  4185                      4185                   4185                
typo total             4185                  4185                      4185                   4185                
win total              4185                  4185                      4185                   4185                
UPM:Heights            1000:3722             1000:4185                 1000:3684              1000:4161           
UPM:Heights %          372 %                 418 %                     368 %                  416 %               


bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
$ fontbakery-fix-glyph-private-encoding.py --autofix /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Italic.ttf
$ mv /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Italic.ttf.fix /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Italic.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): OK
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): FAIL
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): FAIL
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): FAIL
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): OK
### Optimize TTF Sarabun-Italic.ttf
$ ls -l 'Sarabun-Italic.ttf'* # look at the size savings of that subset process
Sarabun-Italic.ttf.opt: 79464 bytes
Sarabun-Italic.ttf: 99368 bytes
$ mv /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Italic.ttf.opt /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Italic.ttf
### Autohint TTFs (ttfautohint) Sarabun-Italic.ttf
$ ttfautohint -l 7 -r 28 -G 50 -x 13 -w "G" /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Italic.ttf '/home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Italic.autohint.ttf'

$ ls -l /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Italic.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Italic.ttf: 79464 bytes
/home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Italic.autohint.ttf: 73412 bytes
$ mv /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Italic.autohint.ttf /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Italic.ttf
### Subset TTFs (pyftsubset) Sarabun-Italic.ttf
$ pyftsubset Sarabun-Italic.latin
$ pyftsubset Sarabun-Italic.menu
strippedname:/home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Italic.ttf
spaceWidth is    216
nbspWidth is     216
Nothing to do
### Test Sarabun-Bold.ttf
$ fontbakery-check.py result Sarabun-Bold.ttf
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): ERROR
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
The following table(s) in the font have been ignored by FontForge
  Ignoring 'DSIG' digital signature table
  Ignoring 'LTSH' linear threshold table
  Ignoring 'VDMX' vertical device metrics table
  Ignoring 'hdmx' horizontal device metrics table
This font contains both a 'kern' table and a 'GPOS' table.
  The 'kern' table will only be read if there is no 'kern' feature in 'GPOS'.
This font contains both a 'mor[tx]' table and a 'GSUB' table.
  FF will only read feature/settings in 'morx' which do not match features
  found in 'GSUB'.
The glyph named zerowidthjoiner is mapped to U+200D.
But its name indicates it should be mapped to U+FEFF.
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): OK
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Bold.ttf
$ mv /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Bold.ttf.fix /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Bold.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Bold.ttf
$ mv /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Bold.ttf.fix /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Bold.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_menu_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): FAIL
$ fontbakery-fix-nbsp.py /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Bold.ttf
$ mv /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Bold.ttf.fix /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Bold.ttf
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): FAIL
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): FAIL
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Bold.ttf
$ mv /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Bold.ttf.fix /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Bold.ttf
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Bold.ttf
$ mv /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Bold.ttf.fix /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Bold.ttf
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
$ fontbakery-fix-glyph-private-encoding.py --autofix /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Bold.ttf
$ mv /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Bold.ttf.fix /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Bold.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): OK
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): FAIL
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): FAIL
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): FAIL
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): OK
### Optimize TTF Sarabun-Bold.ttf
$ ls -l 'Sarabun-Bold.ttf'* # look at the size savings of that subset process
Sarabun-Bold.ttf.opt: 225548 bytes
Sarabun-Bold.ttf: 245288 bytes
$ mv /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Bold.ttf.opt /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Bold.ttf
### Autohint TTFs (ttfautohint) Sarabun-Bold.ttf
$ ttfautohint -l 7 -r 28 -G 50 -x 13 -w "G" /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Bold.ttf '/home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Bold.autohint.ttf'

$ ls -l /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Bold.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Bold.ttf: 225548 bytes
/home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Bold.autohint.ttf: 71640 bytes
$ mv /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Bold.autohint.ttf /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Bold.ttf
### Subset TTFs (pyftsubset) Sarabun-Bold.ttf
$ pyftsubset Sarabun-Bold.latin
$ pyftsubset Sarabun-Bold.menu
strippedname:/home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Bold.ttf
spaceWidth is    226
nbspWidth is     226
Nothing to do
### Test Sarabun-BoldItalic.ttf
$ fontbakery-check.py result Sarabun-BoldItalic.ttf
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): OK
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
The following table(s) in the font have been ignored by FontForge
  Ignoring 'DSIG' digital signature table
  Ignoring 'LTSH' linear threshold table
  Ignoring 'PCLT' PCL 5 data table
  Ignoring 'VDMX' vertical device metrics table
  Ignoring 'hdmx' horizontal device metrics table
This font contains both a 'kern' table and a 'GPOS' table.
  The 'kern' table will only be read if there is no 'kern' feature in 'GPOS'.
This font contains both a 'mor[tx]' table and a 'GSUB' table.
  FF will only read feature/settings in 'morx' which do not match features
  found in 'GSUB'.
The glyph named zerowidthjoiner is mapped to U+200D.
But its name indicates it should be mapped to U+FEFF.
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): OK
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-BoldItalic.ttf
$ mv /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-BoldItalic.ttf.fix /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-BoldItalic.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-BoldItalic.ttf
$ mv /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-BoldItalic.ttf.fix /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-BoldItalic.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_menu_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): FAIL
$ fontbakery-fix-nbsp.py /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-BoldItalic.ttf
$ mv /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-BoldItalic.ttf.fix /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-BoldItalic.ttf
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): FAIL
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): FAIL
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-BoldItalic.ttf
$ mv /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-BoldItalic.ttf.fix /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-BoldItalic.ttf
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-BoldItalic.ttf
$ mv /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-BoldItalic.ttf.fix /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-BoldItalic.ttf
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
$ fontbakery-fix-glyph-private-encoding.py --autofix /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-BoldItalic.ttf
$ mv /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-BoldItalic.ttf.fix /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-BoldItalic.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): OK
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): FAIL
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): FAIL
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): FAIL
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): OK
### Optimize TTF Sarabun-BoldItalic.ttf
$ ls -l 'Sarabun-BoldItalic.ttf'* # look at the size savings of that subset process
Sarabun-BoldItalic.ttf.opt: 80184 bytes
Sarabun-BoldItalic.ttf: 100112 bytes
$ mv /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-BoldItalic.ttf.opt /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-BoldItalic.ttf
### Autohint TTFs (ttfautohint) Sarabun-BoldItalic.ttf
$ ttfautohint -l 7 -r 28 -G 50 -x 13 -w "G" /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-BoldItalic.ttf '/home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-BoldItalic.autohint.ttf'

$ ls -l /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-BoldItalic.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-BoldItalic.ttf: 80184 bytes
/home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-BoldItalic.autohint.ttf: 74428 bytes
$ mv /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-BoldItalic.autohint.ttf /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-BoldItalic.ttf
### Subset TTFs (pyftsubset) Sarabun-BoldItalic.ttf
$ pyftsubset Sarabun-BoldItalic.latin
$ pyftsubset Sarabun-BoldItalic.menu
strippedname:/home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-BoldItalic.ttf
spaceWidth is    226
nbspWidth is     226
Nothing to do
### Test Sarabun-Regular.ttf
$ fontbakery-check.py result Sarabun-Regular.ttf
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): OK
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
The following table(s) in the font have been ignored by FontForge
  Ignoring 'DSIG' digital signature table
  Ignoring 'LTSH' linear threshold table
  Ignoring 'VDMX' vertical device metrics table
  Ignoring 'hdmx' horizontal device metrics table
This font contains both a 'kern' table and a 'GPOS' table.
  The 'kern' table will only be read if there is no 'kern' feature in 'GPOS'.
This font contains both a 'mor[tx]' table and a 'GSUB' table.
  FF will only read feature/settings in 'morx' which do not match features
  found in 'GSUB'.
Glyph 97 is called ".notdef", a singularly inept choice of name (only glyph 0
 may be called .notdef)
FontForge will rename it.
The glyph named zerowidthjoiner is mapped to U+200D.
But its name indicates it should be mapped to U+FEFF.
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): OK
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Regular.ttf
$ mv /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Regular.ttf.fix /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Regular.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Regular.ttf
$ mv /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Regular.ttf.fix /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Regular.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_menu_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): FAIL
$ fontbakery-fix-nbsp.py /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Regular.ttf
$ mv /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Regular.ttf.fix /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Regular.ttf
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): FAIL
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): FAIL
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Regular.ttf
$ mv /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Regular.ttf.fix /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Regular.ttf
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Regular.ttf
$ mv /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Regular.ttf.fix /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Regular.ttf
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
$ fontbakery-fix-glyph-private-encoding.py --autofix /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Regular.ttf
$ mv /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Regular.ttf.fix /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Regular.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): OK
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): FAIL
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): FAIL
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): FAIL
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): OK
### Optimize TTF Sarabun-Regular.ttf
$ ls -l 'Sarabun-Regular.ttf'* # look at the size savings of that subset process
Sarabun-Regular.ttf.opt: 280616 bytes
Sarabun-Regular.ttf: 300392 bytes
$ mv /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Regular.ttf.opt /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Regular.ttf
### Autohint TTFs (ttfautohint) Sarabun-Regular.ttf
$ ttfautohint -l 7 -r 28 -G 50 -x 13 -w "G" /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Regular.ttf '/home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Regular.autohint.ttf'

$ ls -l /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Regular.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Regular.ttf: 280616 bytes
/home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Regular.autohint.ttf: 70128 bytes
$ mv /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Regular.autohint.ttf /home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Regular.ttf
### Subset TTFs (pyftsubset) Sarabun-Regular.ttf
$ pyftsubset Sarabun-Regular.latin
$ pyftsubset Sarabun-Regular.menu
strippedname:/home/travis/build/fontdirectory/sarabun/builds/build/Sarabun-Regular.ttf
spaceWidth is    216
nbspWidth is     216
Nothing to do
### (5 of 6) Generate METADATA.json (fontbakery-build-metadata.py)
$ fontbakery-build-metadata.py /home/travis/build/fontdirectory/sarabun/builds/build
{} exists
Designer's name from font is: Mr.Suppakit CHALERMLARP
Original size: 70128\nGzip size: 36921
Family Name: Sarabun
PS Name: Sarabun-Italic
Full Name: Sarabun Italic
Style: italic
Weight: 400
Filename: Sarabun-Italic.ttf
Copyright: Copyright (c) 2010-2013 by Software Industry Promotion Agency (Public Organization) (SIPA). All rights reserved. Created by Suppakit CHALERMLARP.
Family Name: Sarabun
PS Name: Sarabun-BoldItalic
Full Name: Sarabun Bold Italic
Style: italic
Weight: 700
Filename: Sarabun-BoldItalic.ttf
Copyright: Copyright (c) 2010-2013 by Software Industry Promotion Agency (Public Organization) (SIPA). All rights reserved. Created by Suppakit CHALERMLARP.
Family Name: Sarabun
PS Name: Sarabun
Full Name: Sarabun
Style: normal
Weight: 400
Filename: Sarabun-Regular.ttf
Copyright: Copyright (c) 2010-2013 by Software Industry Promotion Agency (Public Organization) (SIPA). All rights reserved. Created by Suppakit CHALERMLARP.
Family Name: Sarabun
PS Name: Sarabun-Bold
Full Name: Sarabun Bold
Style: normal
Weight: 700
Filename: Sarabun-Bold.ttf
Copyright: Copyright (c) 2010-2013 by Software Industry Promotion Agency (Public Organization) (SIPA). All rights reserved. Created by Suppakit CHALERMLARP.
### (6 of 6) Run tests for METADATA.json
$ fontbakery-check.py metadata METADATA.json
bakery_lint.tests.metadata_test.MetadataSubsetsListTest.test_charset_latin(): OK
bakery_lint.tests.metadata_test.MetadataSubsetsListTest.test_charset_latin_ext(): FAIL
bakery_lint.tests.metadata_test.MetadataSubsetsListTest.test_charset_menu(): OK
bakery_lint.tests.metadata_test.MetadataSubsetsListTest.test_charset_thai(): FAIL
bakery_lint.tests.metadata_test.MetadataSubsetsListTest.test_charset_vietnamese(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_description_is_more_than_500b(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_description_is_valid_html(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_daltonmaag_catalogue(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_fontbureau_catalogue(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_fontscom_catalogue(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_fontshop_catalogue(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_fontsmith_catalogue(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_houseind_catalogue(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_myfonts_catalogue(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_veer_catalogue(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_family_is_listed_in_gwf(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_atleast_latin_menu_subsets_exist(): OK
/home/travis/virtualenv/python2.7.8/lib/python2.7/site-packages/bakery_lint/tests/metadata_test.py:141: UnicodeWarning: Unicode equal comparison failed to convert both arguments to Unicode - interpreting them as being unequal
  self.assertTrue(designer in designers,
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_designer_exists_in_profiles_csv(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_fonts_items_dicts(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_fonts_key_list(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_fonts_no_dupes(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_has_unique_style_weight_pairs(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_keys(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_license(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_no_unknown_top_keys(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_subsets_key_list(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_top_keys_types(): OK
bakery_lint.tests.downstream.test_check_canonical_filenames.CheckCanonicalFilenames.test_check_canonical_filenames(): OK
bakery_lint.tests.downstream.test_check_text_files_exist.CheckTextFilesExist.test_copyrighttxt_exists(): FAIL
bakery_lint.tests.downstream.test_check_text_files_exist.CheckTextFilesExist.test_description_exists(): OK
bakery_lint.tests.downstream.test_check_text_files_exist.CheckTextFilesExist.test_fontlogtxt_exists(): FAIL
bakery_lint.tests.downstream.test_check_text_files_exist.CheckTextFilesExist.test_licensetxt_exists(): FAIL
bakery_lint.tests.downstream.test_metadata_agreements.TestFontOnDiskFamilyEqualToMetadataJSON.test_font_on_disk_family_equal_in_metadata_json(): OK
bakery_lint.tests.downstream.test_metadata_agreements.TestPostScriptNameInMetadataEqualFontOnDisk.test_postscriptname_in_metadata_equal_to_font_on_disk(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_font_name_matches_family(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_family_values_are_all_the_same(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_filename_matches_postscriptname(): FAIL
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_font_have_regular(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_fonts_fields_have_fontname(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_fullname_is_equal_to_internal_font_fullname(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_fullname_matches_postScriptName(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_regular_is_400(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_regular_is_normal(): FAIL
bakery_lint.tests.downstream.test_check_glyph_consistency.CheckGlyphConsistencyInFamily.test_the_same_encodings_of_glyphs_across_family(): OK
bakery_lint.tests.downstream.test_check_glyph_consistency.CheckGlyphConsistencyInFamily.test_the_same_names_of_glyphs_across_family(): FAIL
bakery_lint.tests.downstream.test_check_glyph_consistency.CheckGlyphConsistencyInFamily.test_the_same_number_of_glyphs_across_family(): FAIL
bakery_lint.tests.downstream.test_check_monospace_agreements.CheckMonospaceAgreement.test_check_monospace_agreement(): OK
bakery_lint.tests.downstream.test_check_menu_contains_proper_glyphs.CheckMenuSubsetContainsProperGlyphs.test_check_menu_contains_proper_glyphs(): FAIL
bakery_lint.tests.downstream.test_check_files_menu_agreements.CheckFontsMenuAgreements.test_menu_file_agreement(): OK
bakery_lint.tests.downstream.test_check_metadata_style_matches_names.CheckItalicStyleMatchesMacStyle.test_check_italic_style_matches_names(): FAIL
bakery_lint.tests.downstream.test_check_metadata_style_matches_names.CheckNormalStyleMatchesMacStyle.test_check_normal_style_matches_names(): OK
bakery_lint.tests.downstream.test_check_canonical_weights.CheckCanonicalWeights.test_check_canonical_weights(): OK
bakery_lint.tests.downstream.test_check_canonical_weights.CheckPostScriptNameMatchesWeight.test_postscriptname_contains_correct_weight(): FAIL
bakery_lint.tests.downstream.test_check_canonical_weights.CheckFontWeightSameAsInMetadata.test_font_weight_same_as_in_metadata(): OK
bakery_lint.tests.downstream.test_check_canonical_weights.CheckFullNameEqualCanonicalName.test_metadata_contains_current_font(): OK
bakery_lint.tests.downstream.test_check_metadata_matches_nametable.CheckMetadataMatchesNameTable.test_check_metadata_matches_nametable(): OK
bakery_lint.tests.downstream.test_check_canonical_styles.CheckCanonicalStyles.test_check_canonical_styles(): OK
bakery_lint.tests.downstream.test_metadata_font_copyright.CheckMetadataContainsReservedFontName.test_copyright_contains_correct_rfn(): FAIL
bakery_lint.tests.downstream.test_metadata_font_copyright.CheckMetadataContainsReservedFontName.test_copyright_is_consistent_across_family(): OK
bakery_lint.tests.downstream.test_metadata_font_copyright.CheckMetadataContainsReservedFontName.test_copyright_matches_pattern(): FAIL
bakery_lint.tests.downstream.test_metadata_font_copyright.CheckMetadataContainsReservedFontName.test_metadata_copyright_size(): OK
bakery_lint.tests.downstream.test_check_subsets_exists.CheckSubsetsExist.test_check_subsets_exists(): FAIL
bakery_lint.tests.downstream.test_check_metadata_fields.CheckMetadataFields.test_check_metadata_fields(): OK
bakery_lint.tests.downstream.test_check_familyname_matches_fontnames.CheckFamilyNameMatchesFontNames.test_check_familyname_matches_fontnames(): OK
bakery_lint.tests.downstream.test_check_font_name_not_in_camelcase.CheckFontNameNotInCamelCase.test_fontname_not_in_camel_case(): OK
{
  "name": "Sarabun", 
  "designer": "Suppakit Chalermlarp", 
  "license": "OFL", 
  "visibility": "Internal", 
  "category": "Sans Serif", 
  "size": 163859, 
  "fonts": [
    {
      "name": "Sarabun", 
      "postScriptName": "Sarabun-Italic", 
      "fullName": "Sarabun Italic", 
      "style": "italic", 
      "weight": 400, 
      "filename": "Sarabun-Italic.ttf", 
      "copyright": "Copyright (c) 2010-2013 by Software Industry Promotion Agency (Public Organization) (SIPA). All rights reserved. Created by Suppakit CHALERMLARP."
    }, 
    {
      "name": "Sarabun", 
      "postScriptName": "Sarabun-BoldItalic", 
      "fullName": "Sarabun Bold Italic", 
      "style": "italic", 
      "weight": 700, 
      "filename": "Sarabun-BoldItalic.ttf", 
      "copyright": "Copyright (c) 2010-2013 by Software Industry Promotion Agency (Public Organization) (SIPA). All rights reserved. Created by Suppakit CHALERMLARP."
    }, 
    {
      "name": "Sarabun", 
      "postScriptName": "Sarabun", 
      "fullName": "Sarabun", 
      "style": "normal", 
      "weight": 400, 
      "filename": "Sarabun-Regular.ttf", 
      "copyright": "Copyright (c) 2010-2013 by Software Industry Promotion Agency (Public Organization) (SIPA). All rights reserved. Created by Suppakit CHALERMLARP."
    }, 
    {
      "name": "Sarabun", 
      "postScriptName": "Sarabun-Bold", 
      "fullName": "Sarabun Bold", 
      "style": "normal", 
      "weight": 700, 
      "filename": "Sarabun-Bold.ttf", 
      "copyright": "Copyright (c) 2010-2013 by Software Industry Promotion Agency (Public Organization) (SIPA). All rights reserved. Created by Suppakit CHALERMLARP."
    }
  ], 
  "subsets": [
    "latin", 
    "menu"
  ], 
  "dateAdded": "2013-10-28"
}
